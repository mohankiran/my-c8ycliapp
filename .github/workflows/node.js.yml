# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  workflow_run:
    workflows: ["Automation Workflow"]
    types:
      - completed

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
#       - run: echo "Triggering from UI"
#       - name: Automation Check
#         id: automation_check
#         run: |
#             curl -X POST https://api.github.com/repos/mohankiran/sol-cpi-commercial-pool-automation/dispatches \
#             -H 'Accept: application/vnd.github.everest-preview+json' \
#             -u ${{ secrets.ACTIONS_KEY }} \
#             --data '{"event_type": "Automation Workflow", "client_payload": { "repository": "https://github.com/mohankiran/sol-cpi-commercial-pool-automation" }}'
            
#       - name: Fetch the status, run ID = ${{steps.automation_check.outputs.run_id}}
#         if: ${{steps.automation_check.outputs.run_id}}
#         run: |
#           echo "Status is success"

        - name: Dispatch an action and get the run ID
          uses: codex-/return-dispatch@v1
          id: return_dispatch
          with:
              token: ${{ secrets.ACTIONS_KEY }}
              repo: sol-cpi-commercial-pool-automation
              owner: mohankiran
              ref: main
              workflow: maven.yml
              
        - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
          uses: Codex-/await-remote-run@v1.0.0
          with:
              token: ${{ secrets.ACTIONS_KEY}}
              repo: return-dispatch
              owner: mohankiran
              run_id: ${{ steps.return_dispatch.outputs.run_id }}
              ref: main
              run_timeout_seconds: 300 # Optional
              poll_interval_ms: 5000 # Optional
